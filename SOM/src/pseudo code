Initialize a 2D grid of neurons representing possible city positions
Set learning parameters (learning rate, neighborhood radius, number of iterations)

# Step 1: Initialize Neurons
Randomly distribute neurons in a continuous space that covers the cities

# Step 2: Training Phase
FOR each iteration:
    FOR each city in the adjacency list:
        - Find the Best Matching Unit (BMU): The neuron closest to the current city
        - Update the BMU and its neighbors:
            - Move the BMU towards the city
            - Adjust neighboring neurons based on the neighborhood radius
        - Reduce the learning rate and neighborhood radius over time

# Step 3: Generate TSP Route
Sort the neurons based on their positions to form a closed-loop path
Map the cities to the nearest neurons to create a tour sequence

# Step 4: Compute Route Distance
Calculate the total distance of the generated tour using the adjacency list

# Step 5: Output Best Route
Return the optimized route and its total distance
